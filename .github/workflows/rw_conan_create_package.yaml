name: "Conan: create (v1)"

on:
  workflow_call:
    inputs:
      host:
        description: "The host machine to be used by this workflow."
        required: true
        type: string
      conan_package:
        description: "The conan package ID that should be created by this workflow"
        required: true
        type: string

      conan_options:
        description: "Additional command line arguments passed to the 'create' command"
        required: false
        type: string
      conan_config_url:
        description: "A URL from which we can get conan configurations."
        required: false
        type: string
      conan_profile:
        description: "The conan profile to be used during validation. (requires 'conan_config_url')"
        required: false
        type: string

jobs:
  create_package:
    name: Create package
    runs-on: ${{ input.host }}
    steps:
      - uses: actions/checkout@v2
      - name: Install tools (Clang 11)
        if: ${{ startsWith(input.host, 'ubuntu') && input.conan_profile == 'clang-11.0-linux-x86_64' }}
        run: |
          sudo apt install libc++-11-dev libc++abi-11-dev
      - name: Install tools (Clang 12)
        if: ${{ startsWith(input.host, 'ubuntu') && input.conan_profile == 'clang-12.0-linux-x86_64' }}
        run: |
          sudo apt install libc++-12-dev libc++abi-12-dev
      - name: Install tools (GCC 11)
        if: ${{ startsWith(input.host, 'ubuntu') && input.conan_profile == 'gcc-11.0-linux-x86_64' }}
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt install -y gcc-11 g++-11 libstdc++6

      - name: Install Conan
        shell: pwsh
        run: |
          pip3 install setuptools
          pip3 install wheel
          pip3 install conan
      - name: Download config
        if: ${{ input.conan_config_url != '' }}
        shell: pwsh
        run: |
          conan config install ${{ input.conan_config_url }}

      - name: Create (profile: default)
        if: ${{ input.conan_profile == '' }}
        shell: pwsh
        run: |
          conan create . ${{ input.conan_package }} ${{ input.conan_options }}
      - name: Create (profile: ${{ input.conan_profile }})
        if: ${{ input.conan_profile != '' }}
        shell: pwsh
        run: |
          conan create . ${{ input.conan_package }} --profile ${{ input.conan_profile }} ${{ input.conan_options }}
